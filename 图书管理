#include<stdio.h>#include<conio.h>#include<stdlib.h>#include<string.h>#include <windows.h>#define N 105// 加油！/*自定义模块*/ typedef struct account{//自定义用户	char acc_name[100];	char  acc_password[100];}ACCOUNT;typedef struct book{//自定义书本	char book_num[10];	char book_name[20];	char book_create[20];	double book_price;	int book_amount;}BOOK;BOOK bk[2000]={};ACCOUNT ac[1000]={"my","123456"};int booknum=0;int usernum=1;/*函数调用模块*/void myGets(char *ps);int account_nameindex();int yes(int index);int fault_user();void my_interface();void booklist();void viewBuyBOOK (BOOK buy[],int buyNum,char bkNo[]);void sale();void my_interface_1();void my_interface_2();int account();int showSel();void readData();void saveData();void readData_aacount();void saveData_aacount();void bookin();void cahe();void find();int seek(char *bInNo);void correct();int findmenu();void account_correct();void find_bookamount();void find_bookprice();void find_booknum();void find_bookname();void find_booka();void mohu();/*主函数*/ int main(){	readData();	readData_aacount();	int sel,leap;	leap=account();	switch(leap){		case 1:do{	    		system("cls");				sel=showSel();					switch(sel){						case 0: system("cls");printf("退出成功！");return 0;						case 1: booklist();break;						case 2: sale();break;						case 3: bookin();break;						case 4: find();break;						case 5: correct();break;						case 6: account_correct();break;						default: printf("\t\t错误编号！\n");system("pause");break; 					}				}while(sel);		case -1: printf("账户错误，无法进入，请重新输入！");Sleep(1000);fault_user();break;		case -2: system("pause");break;		case -3: main(); break;	} 	return 0;}/*辅助函数模块*/void myGets(char *ps){//输入字符串	fflush(stdin);	gets(ps);}void saveData_aacount(){	FILE *fp_1;	if((fp_1=fopen(".\\accountdata.txt","wb+"))==NULL){		printf("没有找到文件！");		exit;	}	fwrite(&usernum,sizeof(int),1,fp_1);	fwrite(ac,sizeof(ACCOUNT),usernum,fp_1);	fclose(fp_1);}void readData_aacount(){	FILE *fp_1;	if((fp_1=fopen(".\\accountdata.txt","rb+"))==NULL){		printf("没有找到文件！");		exit;	}	fwrite(&usernum,sizeof(int),1,fp_1);	fwrite(ac,sizeof(ACCOUNT),usernum,fp_1);	fclose(fp_1);}void saveData(){	FILE *fp;	if((fp=fopen(".\\data.txt","wb"))==NULL){		printf("没有找到文件！");		exit;	}	fwrite(&booknum,sizeof(int),1,fp);	fwrite(bk,sizeof(BOOK),booknum,fp);	fclose(fp);}void readData(){	FILE *fp;	if((fp=fopen(".\\data.txt","rb"))==NULL){		printf("没有找到文件！");		exit; 	}	fread(&booknum,sizeof(int),1,fp);	fread(bk,sizeof(BOOK),booknum,fp);	fclose(fp);	}void cheek(){	printf("%s\n",bk[booknum-1].book_num);	printf("%s\n",bk[booknum-1].book_name);	printf("%s\n",bk[booknum-1].book_create);	printf("%lf\n",bk[booknum-1].book_price);	printf("%d\n",bk[booknum-1].book_amount);}/*函数模块*///账户登录 int account_nameindex(){	int i;	char user[100];	system("cls");	cahe();	printf("请输入用户名(输入000退出，默认用户名“my”)：");myGets(user);	if(strcmp(user,"000")==0) return -2;	for(i=0;i<usernum;i++){		if(strcmp(ac[i].acc_name,user)==0) return i;	}	return -1;	}int account_password(int index){	int i;	char password[100];	system("cls");	printf("请输入密码(默认密码123456)：");myGets(password);	if(strcmp("000000",password)==0) return -2;	if(strcmp(ac[index].acc_password,password)==0) return 1;	return -1;}int fault_user(){	system("cls");	printf("用户名错误，请重新输入！\n");	Sleep(1000);	return account(); }int fault_pw(int index){	static int accc=0;	system("cls");	printf("密码错误，请重新输入！\n");	if(accc==0)printf("【错误三次自动退出】");	accc++; 	if(accc==1)printf("【以错误一次】\n");	Sleep(1000);	if(accc==2)printf("【以错误两次】\n");	Sleep(1000);	if(accc==3){		printf("以错误三次自动退出\n");return -2;	}	return yes(index);	}int yes(int index){	int leap;	leap=account_password(index);	 switch(leap){	 	case  1: return 1;	 	case -1: return fault_pw(index);	 	case -2: return -3;	 }}//图书销售 void viewBuy(BOOK buy[],int buyNum,char bkNo[]){	float total=0;	system("cls");	printf("\t\t\t\t\t\t#图书销售#\n\n");	my_interface_1();	for(int i=0;i<buyNum;i++){		float t=buy[i].book_price*buy[i].book_amount;		total+=t;		printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n"		,buy[i].book_num,buy[i].book_name,buy[i].book_create		,buy[i].book_price,buy[i].book_amount);	} 	my_interface_2();	printf("\t总价=%.2f\n",total);	printf("\t请输入书号(000退出):");myGets(bkNo);}int seekbkNo(char *bkNo){	int i;	for(i=0;i<booknum;i++){		if(strcmp(bk[i].book_num,bkNo)==0) break;	}	if(i>=booknum) return -1;	if(bk[i].book_amount<=0) return -2;	return i;	}void addBuy(BOOK buy[],int &buyNum,int index){	int i;	for(i=0;i<buyNum;i++){		if(strcmp(buy[i].book_num,bk[i].book_num)==0) break;	} 	if(i<buyNum) buy[i].book_amount++;	else{		buy[buyNum]=bk[index];		buy[buyNum].book_amount=1;		buyNum++;	}}//入库系统 int  view_bIn(BOOK bIn[],int bInNum,char bInNo[]){	float total=0;	system("cls");	printf("\t\t\t\t\t\t#图书入库#\n\n");	my_interface_1();	for(int i=0;i<bInNum;i++){		printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n"		,bIn[i].book_num,bIn[i].book_name,bIn[i].book_create,bIn[i].book_price,bIn[i].book_amount);	} 	my_interface_2();	printf("\t请输入书号(000退出):");myGets(bInNo);	if(strcmp(bInNo,"000")==0) return -2;	return seek(bInNo);}int seek(char *bInNo){	int i;	for(i=0;i<booknum;i++){		if(strcmp(bInNo,bk[i].book_num)==0) return i;	}	return -1;}int seek_bIn(int index,BOOK bIn[],int bInNum,char bInNo[]){	int i;	for(i=0;i<bInNum;i++){		if(strcmp(bInNo,bIn[i].book_num)==0) return i;	}	return -1;}void strcpy_1(BOOK bIn[],int bInNum,int index){	strcpy(bIn[bInNum].book_num,bk[index].book_num);	strcpy(bIn[bInNum].book_name,bk[index].book_name);	strcpy(bIn[bInNum].book_create,bk[index].book_create);	bIn[bInNum].book_price=bk[index].book_price;	bIn[bInNum].book_amount=bk[index].book_amount;}int book_inin(BOOK bIn[],int index,int bInNum,char bInNo[]){	int a,leap;	printf("\t请输入数量：");	scanf("%d",&a);	Sleep(1000);	leap=seek_bIn(index,bIn,bInNum,bInNo);	switch(leap){		case -1:{			bk[bInNum].book_amount+=a;			strcpy_1(bIn,bInNum,index);			return ++bInNum;		}		default :{					bk[leap].book_amount+=a;			printf("%d\n",bk[bInNum].book_amount);Sleep(1000);			bIn[leap].book_amount=bk[index].book_amount;			return bInNum;		}	}}void strcpy_2(BOOK bIn[],int bInNum,char bInNo[]){	strcpy(bIn[bInNum-1].book_num,bk[booknum-1].book_num);	strcpy(bIn[bInNum-1].book_name,bk[booknum-1].book_name);	strcpy(bIn[bInNum-1].book_create,bk[booknum-1].book_create);	bIn[bInNum-1].book_price=bk[booknum-1].book_price;	bIn[bInNum-1].book_amount=bk[booknum-1].book_amount;	saveData();} int book_in(BOOK bIn[],int bInNum,char bInNo[]){	char a[200],b[200];	 booknum++;	 bInNum++;	Sleep(1000);	 strcpy(bk[booknum-1].book_num,bInNo);	 printf("\t请输入书名：");myGets(a);	 strcpy(bk[booknum-1].book_name,a);	 printf("\t请输入作者：");myGets(b);	 strcpy(bk[booknum-1].book_create,b);	 printf("\t请输入单价：");	 scanf("%lf",&bk[booknum-1].book_price);	 printf("\t请输入数量：");	 scanf("%d",&bk[booknum-1].book_amount);	 strcpy_2(bIn,bInNum,bInNo);	 return bInNum;}	//图书查询int no_num(){ 	int i;	printf("\t没有找到该书信息，请重新输入！\n");	system("pause");	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_bookname();	}else return -2;}int putsbook_num(int leap){	int i;	system("cls");	my_interface_1();	printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n",bk[leap].book_num,bk[leap].book_name,bk[leap].book_create		,bk[leap].book_price,bk[leap].book_amount);	my_interface_2();	Sleep(1000);	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_booknum();	}else return -2;}int  find_booknum_index(char a[]){	int i;	if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_num)==0) return i;	}	return -1;}void find_booknum(){	char a[100];	int leap,b;	system("cls");	printf("\t请输入查询书号：");myGets(a);	do{	    system("cls");		leap=find_booknum_index(a);		cahe();		switch(leap){			case -2: return ;			case -1: b=no_num();if(b==-2) return;break;			default: b=putsbook_num(leap);if(b==-2) return;break;			}				}while(leap);	 }int no_name(){	int i;	printf("\t没有找到该书信息，请重新输入！\n");	printf("\t");system("pause");	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_bookname();	}else return -2;}int putsbook_name(int leap){	int i;	system("cls");	my_interface_1();	printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n",bk[leap].book_num,bk[leap].book_name,bk[leap].book_create		,bk[leap].book_price,bk[leap].book_amount);		my_interface_2();	Sleep(1000);	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_bookname();	}else return -2;		}int  find_bookname_index(char a[]){	int i;	if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_name)==0) return i;	}	return -1;}void find_bookname(){	char a[100];	int leap,b;	system("cls");	printf("\t请输入查询书名：");myGets(a);	do{	    system("cls");		leap=find_bookname_index(a);		cahe();		switch(leap){			case -2: break;			case -1: b=no_name();if(b==-2) return;break;			default: b=putsbook_name(leap);if(b==-2) return;break;			}		}while(leap);}int no_a(){	int i;	printf("\t没有找到该书信息，请重新输入！\n");	system("pause");	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_booka();	}else return -2;}int putsbook_a(int leap){	int i;	system("cls");	my_interface_1();	printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n",bk[leap].book_num,bk[leap].book_name,bk[leap].book_create		,bk[leap].book_price,bk[leap].book_amount);	my_interface_2();	Sleep(1000);		printf("\t输入1继续搜索，输入0退出:"); scanf("%d",&i);	if(i==1){		find_booka();	}else return -2;}int  find_booka_index(char a[]){	int i;	if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_create)==0) return i;	}	return -1;}void find_booka(){	char a[100];	int leap,b;	system("cls");	printf("\t请输入查询作者名：");myGets(a);	do{	    system("cls");		leap=find_booka_index(a);		cahe();		switch(leap){			case -2: break;			case -1: b=no_a();if(b==-2) return;break;			default: b=putsbook_a(leap);if(b==-2) return;break;			}	}while(leap);	 } int no_amount(){	int i;	printf("\t没有找到该书信息，请重新输入！\n");	system("pause");	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_bookamount();	}else return -2;}int putsbook_amount(int leap){	int i;	system("cls");	my_interface_1();	printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n",bk[leap].book_num,bk[leap].book_name,bk[leap].book_create		,bk[leap].book_price,bk[leap].book_amount);	my_interface_2();	Sleep(1000);		printf("\t输入1继续搜索，输入0退出:"); scanf("%d",&i);	if(i==1){		find_bookamount();	}else return -2;}int  find_bookamount_index(int a){	int i;	if(a==0) return -2;	for(i=0;i<booknum;i++){		if(a==bk[i].book_amount) return i;	}	return -1;}void find_bookamount(){	int a;	int leap,b;	system("cls");	printf("\t请输入查询的数量：");scanf("%d",&a);	do{	    system("cls");		leap=find_bookamount_index(a);		cahe();		switch(leap){			case -2: break;			case -1: b=no_amount();if(b==-2) return;break;			default: b=putsbook_amount(leap);if(b==-2) return;break;			}	}while(leap);	 } int no_price(){	int i;	printf("\t没有找到该书信息，请重新输入！\n");	system("pause");	printf("\t输入1继续搜索，输入0退出:");scanf("%d",&i);	if(i==1){		find_bookprice();	}else return -2;}int putsbook_price(int leap){	int i;	system("cls");	my_interface_1();	printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n\n",bk[leap].book_num,bk[leap].book_name,bk[leap].book_create		,bk[leap].book_price,bk[leap].book_amount);	my_interface_2();	Sleep(1000);		printf("\t输入1继续搜索，输入0退出:"); scanf("%d",&i);	if(i==1){		find_bookprice();	}else return -2;}int  find_bookprice_index(double a){	int i;	if(a==0) return -2;	for(i=0;i<booknum;i++){		if(a==bk[i].book_price) return i;	}	return -1;}void find_bookprice(){	double a;	int leap,b;	system("cls");	printf("\t请输入查询的价格：");scanf("%lf",&a);	do{	    system("cls");		leap=find_bookprice_index(a);		cahe();		switch(leap){			case -2: break;			case -1: b=no_price();if(b==-2) return;break;			default: b=putsbook_price(leap);if(b==-2) return;break;			}	}while(leap);	 } int my_find(char str1[],char str2[]){	int i,flag=0,j;	for(j=0;str1[j];j++){		for(i=0;str1[i]&&str2[i];i++){			if(str1[j+i]==str2[i]) flag++;		}		if(strlen(str2)==1&&flag==1||flag>=2) return 0;		flag=0;	}	return 1;}void mohu(){	system("cls");		char str1[100],str2[100];	int i;	printf("请输入：");myGets(str1);	for(i=0;i<booknum;i++){		strcpy(str2,bk[i].book_name);		if(my_find(str1,str2)==1) {			printf("%d\n",i);			putsbook_name(i); 		}				}    system("pause");}//图书修改 int correct_num_yes(char b[]){	int i;	if(strcmp(b,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(b,bk[i].book_num)==0) return i;	}	return -1;	}void correctnum(int index){	char b[20];	int leap;	do{		printf("\t请输入修改后的书号：");myGets(b); 		leap=correct_num_yes(b);		switch(leap){			case-2:return;			case-1:{				strcpy(bk[index].book_num,b);				printf("\t更改成功！\n"); 				system("pause");				saveData();				return ;			} 			default:printf("\t书号以存在！修改失败！请重新输入！\n");system("pause");break;		}	}while(1);}int correct_num_index(){	int i;	char a[20],b[20];	printf("\t请输入要修改的书号：");myGets(a);		if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_num)==0) return i;	}	return -1;}void correct_num(){	 int index;		 do{		 	system("cls");		 	index=correct_num_index();	 		switch(index){			case-2: return;			case-1: printf("\t没有找到此书号,请重新输入!\n"); system("pause");break;			default : correctnum(index);return ;  		 }	 }while(1);	 }int correct_name_yes(char b[]){	int i;	if(strcmp(b,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(b,bk[i].book_name)==0) return i;	}	return -1;	}void correctname(int index){	char b[20];	int leap;	do{		printf("\t请输入修改后的书名：");myGets(b); 		leap=correct_name_yes(b);		switch(leap){			case-2:return;			case-1:{				strcpy(bk[index].book_name,b);				printf("\t更改成功！\n"); 				system("pause");				saveData();				return ;			} 			default:printf("\t书名以存在！修改失败！请重新输入！\n");system("pause");break;		}	}while(1);}int correct_name_index(){	int i;	char a[20],b[20];	printf("\t请输入要修改的书名：");myGets(a);		if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_name)==0) return i;	}	return -1;}void correct_name(){	 int index;		 do{		 	system("cls");		 	index=correct_name_index();	 		switch(index){			case-2: return;			case-1: printf("\t没有找到此书名,请重新输入!\n"); system("pause");break;			default : correctname(index);return ;  		 }	 }while(1);	 }int correct_create_yes(char b[]){	int i;	if(strcmp(b,"000")==0) return -2;	else return -1;	}void correctcreate(int index){	char b[20];	int leap;	do{		printf("\t请输入修改后的作者：");myGets(b); 		leap=correct_create_yes(b);		switch(leap){			case-2:return;			case-1:{				strcpy(bk[index].book_name,b);				printf("\t更改成功！\n"); 				system("pause");				saveData();				return ;			} 		}	}while(1);}int correct_create_index(){	int i;	char a[20],b[20];	printf("\t请输入要修改作者的书名：");myGets(a);		if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_name)==0) return i;	}	return -1;}void correct_create(){	 int index;		 do{		 	system("cls");		 	index=correct_create_index();	 		switch(index){			case-2: return;			case-1: printf("\t没有找到此书名,请重新输入!\n"); system("pause");break;			default : correctcreate(index);return ;  		 }	 }while(1);	 }int correct_price_yes(char b[]){	if(strcmp(b,"000")==0) return -2;	else return -1;	}void correctprice(int index){	char b[20];	int t;	int leap;	do{		printf("\t请输入修改后的价格：");scanf("%d",&t);		leap=correct_price_yes(b);		switch(leap){			case-2:return;			case-1:{				bk[index].book_price=t; 				printf("\t更改成功！\n"); 				system("pause");				saveData();				return ;			} 		}	}while(1);}int correct_price_index(){	int i;	char a[20],b[20];	printf("\t请输入要修改的书号：");myGets(a);		if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_num)==0) return i;	}	return -1;}void correct_price(){	 int index;		 do{		 	system("cls");		 	index=correct_price_index();	 		switch(index){			case-2: return;			case-1: printf("\t没有找到此书号,请重新输入!\n"); system("pause");break;			default : correctprice(index);return ;  		 }	 }while(1);	 }void correctamount(int index){	char b[20];	int t;	int leap;	do{		printf("\t请输入修改后的数量：");scanf("%d",&t);		leap=correct_price_yes(b);		switch(leap){			case-2:return;			case-1:{				bk[index].book_amount=t; 				printf("\t更改成功！\n"); 				system("pause");				saveData();				return ;			} 		}	}while(1);}int correct_amount_index(){	int i;	char a[20],b[20];	printf("\t请输入要修改的书号：");myGets(a);	if(strcmp(a,"000")==0) return -2;	for(i=0;i<booknum;i++){		if(strcmp(a,bk[i].book_num)==0) return i;	}	return -1;}void correct_amount(){	 int index;		 do{		 	system("cls");		 	index=correct_amount_index();	 		switch(index){			case-2: return;			case-1: printf("\t没有找到此书号,请重新输入!\n"); system("pause");break;			default : correctamount(index);return ;  		 }	 }while(1);	 }//账户管理 int account_name_index(char accout_name[]){		int i;	readData_aacount();	system("cls");	printf("请输入注册用户名：");myGets(accout_name);		if(strcmp(accout_name,"000")==0) return -2;	for(i=0;i<usernum;i++){		if(strcmp(accout_name,ac[i].acc_name)==0) return i;	}	return -1;}int account_addname(char accout_name[]){	char addpassword[100];	readData_aacount();	usernum++;	strcpy(ac[usernum-1].acc_name,accout_name);	printf("请输入密码:"); myGets(addpassword);	cahe();	strcpy(ac[usernum-1].acc_password,addpassword);	printf("注册成功！\n");	system("pause");	saveData_aacount();}void add_Account(){	int index;	char account_name[100];	do{		index=account_name_index(account_name);		switch(index){			case -2:return;			case -1:account_addname(account_name);return ;			default :printf("用户名以存在，请重新输入！\n");break; 		}			}while(1);		 }void accountlist(){	int i;	system("cls");	cahe();	printf("\t\t\t\t\t\t#会员列表#\n\n");	for(i=0;i<usernum;i++){		printf("\t\t%-20s%-20s%\n",ac[i].acc_name,ac[i].acc_password);	} 	Sleep(1000);	printf("\t");system("pause");}void correct_account_pw(){	}/*界面优化模块*/ void cahe(){	printf("\t\t\t\t......加载中......\n");	Sleep(1000);	system("cls");}void my_interface_1(){//表头	printf("\t==========================================================================================\n");	printf("\t|||书号|\t      |书名|\t\t   |作者|\t       |单价|\t     |数量|     ||\n");	printf("\t||======================================================================================||\n");	}void my_interface_2(){//表未	printf("\t==========================================================================================\n");}int showSel(){//主菜单	int sel;	system("cls");	printf("\t      简易图书管理系统\n"); 	printf("==========================================\n");	printf("|*\t\t|1.图书列表|\t\t*|\n");	printf("|*\t\t|2.图书销售|\t\t*|\n");	printf("|*\t\t|3.图书入库|\t\t*|\n");	printf("|*\t\t|4.图书查询|\t\t*|\n");	printf("|*\t\t|5.图书修改|\t\t*|\n");	printf("|*\t\t|6.账户管理|\t\t*|\n");	printf("|*\t\t|0.退出系统|\t\t*|\n");	printf("==========================================\n");	printf("\t\t输入你的操作：");	scanf("%d",&sel);	return sel; }int findmenu(){	int sel;	system("cls");	printf("\t      图书查找系统\n"); 	printf("==========================================\n");	printf("|*\t\t|1.书号查询|\t\t*|\n");	printf("|*\t\t|2.书名查询|\t\t*|\n");	printf("|*\t\t|3.作者查询|\t\t*|\n");	printf("|*\t\t|4.数量查询|\t\t*|\n");	printf("|*\t\t|5.价格查询|\t\t*|\n");	printf("|*\t\t|6.模糊查询|\t\t*|\n");		printf("|*\t\t|0.退出系统|\t\t*|\n");	printf("==========================================\n");	printf("\t\t输入操作编号：");	scanf("%d",&sel);	return sel; 	}int correct_menu(){	int sel;	system("cls");	printf("\t      图书修改系统\n"); 	printf("==========================================\n");	printf("|*\t\t|1.书号修改|\t\t*|\n");	printf("|*\t\t|2.书名修改|\t\t*|\n");	printf("|*\t\t|3.作者修改|\t\t*|\n");	printf("|*\t\t|4.价格修改|\t\t*|\n");	printf("|*\t\t|5.数量修改|\t\t*|\n");	printf("|*\t\t|0.退出系统|\t\t*|\n");	printf("==========================================\n");	printf("\t\t输入操作编号：");	scanf("%d",&sel);	return sel; }int account_correct_menu(){	int sel;	system("cls");	printf("\t      账户管理系统\n"); 	printf("==========================================\n");	printf("|*\t\t|1.账户注册|\t\t*|\n");	printf("|*\t\t|2.密码修改|\t\t*|\n");//  printf("|*\t\t|2.会员列表|\t\t*|\n");	printf("|*\t\t|0.退出系统|\t\t*|\n");	printf("==========================================\n");	printf("\t\t输入操作编号：");	scanf("%d",&sel);	return sel;}/*功能模块*/ int account(); void booklist();void sale();void bookin();/*账户管理系统*/int account(){	readData_aacount();	int index,leap;	do{		index=account_nameindex();		switch(index){			case -1: return fault_user();			case -2: return -2;			default : return yes(index);			}	}while(index!=-1);	system("pause");}/*图书列表系统*/void booklist(){	int i;	system("cls");	cahe();	printf("\t\t\t\t\t\t#图书列表#\n\n");	my_interface_1();	for(i=0;i<booknum;i++){		printf("\t|| %-20s%-20s%-20s%-16.2f%-9d||\n",bk[i].book_num,bk[i].book_name,bk[i].book_create		,bk[i].book_price,bk[i].book_amount);	} 	my_interface_2();	Sleep(1000);	printf("\t");system("pause");} /*图书销售系统*/void sale(){	system("cls");	BOOK buy[100]={};	int buyNum=0;	char bkNo[20];	do{		viewBuy(buy,buyNum,bkNo); 		if(strcmp(bkNo,"000")==0) break;		int index=seekbkNo(bkNo);		if(index<0){			printf("\t该书不存在！\n");			system("pause");			continue; 		}		addBuy(buy,buyNum,index);		bk[index].book_amount--;		saveData();	}while(1);}                /*图书入库系统*/void bookin(){	 BOOK bIn[100]={};	 int b,index;	 int bInNum=0; 	 char bInNo[20]; 	 system("cls");	 do{	 	index=view_bIn(bIn,bInNum,bInNo); 		switch(index){			case -2:  break; 			case -1:  bInNum=book_in(bIn,bInNum,bInNo);break;			default : bInNum=book_inin(bIn,index,bInNum,bInNo); break;		}		saveData();	}while(index!=-2);	system("pause");} /*图书查询系统*/void find(){	int sel;		do{	    system("cls");		sel=findmenu();		switch(sel){			case 0: return ;			case 1: find_booknum();break;			case 2: find_bookname();break;			case 3: find_booka();break;			case 4: find_bookamount();break; 			case 5: find_bookprice();break;			case 6: mohu();break;			}				}while(sel!=0);} /*图书修改系统*/void correct(){	int sel;	do{	system("cls");	sel=correct_menu(); 		switch(sel){		case 1: correct_num();break;		case 2: correct_name();break;		case 3: correct_create();break;		case 4: correct_amount();break;		case 5: correct_price();break;		case 0: return ;		}	}while(1);} /*账户管理系统*/void account_correct(){	int sel;	readData_aacount();	do{	system("cls");	sel=account_correct_menu(); 		switch(sel){		case 1: add_Account();break;		case 2: correct_account_pw();break;		case 3: accountlist();break;		case 0: return ;		}	}while(1);}
